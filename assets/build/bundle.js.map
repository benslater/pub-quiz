{"version":3,"file":"bundle.js","sources":["../../frontend/node_modules/svelte/internal/index.mjs","../../frontend/node_modules/svelte/store/index.mjs","../../frontend/node_modules/svelte-router-spa/src/store.js","../../frontend/node_modules/url-params-parser/index.js","../../frontend/node_modules/url-params-parser/url_parser.js","../../frontend/node_modules/svelte-router-spa/src/lib/utils.js","../../frontend/node_modules/svelte-router-spa/src/router/current.js","../../frontend/node_modules/svelte-router-spa/src/router/guard.js","../../frontend/node_modules/svelte-router-spa/src/router/redirect.js","../../frontend/node_modules/svelte-router-spa/src/router/route.js","../../frontend/node_modules/svelte-router-spa/src/router/path.js","../../frontend/node_modules/svelte-router-spa/src/router/finder.js","../../frontend/node_modules/svelte-router-spa/src/spa_router.js","../../frontend/node_modules/svelte-router-spa/src/components/route.svelte","../../frontend/node_modules/svelte-router-spa/src/components/router.svelte","../../frontend/node_modules/svelte-router-spa/src/components/navigate.svelte","../../frontend/node_modules/svelte-router-spa/src/index.js","../../frontend/node_modules/js-cookie/src/js.cookie.js","../../frontend/src/stores.js","../../frontend/src/pages/homepage/index.svelte","../../frontend/src/utils/request.js","../../frontend/src/pages/setup/index.svelte","../../frontend/src/pages/join/index.svelte","../../frontend/src/pages/game/components/player-list.svelte","../../frontend/src/pages/game/components/player-scores.svelte","../../frontend/src/pages/game/components/player-answers.svelte","../../frontend/src/pages/game/components/answer-input.svelte","../../frontend/src/utils/socket.js","../../frontend/src/pages/game/index.svelte","../../frontend/src/routes.js","../../frontend/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.21.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const writable = require('svelte/store').writable\n\nconst router = writable({})\n\nfunction set(route) {\n  router.set(route)\n}\n\nfunction remove() {\n  router.set({})\n}\n\nconst activeRoute = {\n  subscribe: router.subscribe,\n  set,\n  remove\n}\n\nmodule.exports = { activeRoute }\n","const UrlParser = require(\"./url_parser\").UrlParser;\n\nmodule.exports = {\n  UrlParser\n};\n","const UrlParser = (urlString, namedUrl = \"\") => {\n  const urlBase = new URL(urlString);\n\n  /**\n   * Wrapper for URL.host\n   *\n   **/\n  function host() {\n    return urlBase.host;\n  }\n\n  /**\n   * Wrapper for URL.hostname\n   *\n   **/\n  function hostname() {\n    return urlBase.hostname;\n  }\n\n  /**\n   * Returns an object with all the named params and their values\n   *\n   **/\n  function namedParams() {\n    const allPathName = pathNames();\n    const allNamedParamsKeys = namedParamsWithIndex();\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values[paramKey.value] = allPathName[paramKey.index];\n      return values;\n    }, {});\n  }\n\n  /**\n   * Returns an array with all the named param keys\n   *\n   **/\n  function namedParamsKeys() {\n    const allNamedParamsKeys = namedParamsWithIndex(namedUrl);\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values.push(paramKey.value);\n      return values;\n    }, []);\n  }\n\n  /**\n   * Returns an array with all the named param values\n   *\n   **/\n  function namedParamsValues() {\n    const allPathName = pathNames();\n    const allNamedParamsKeys = namedParamsWithIndex();\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values.push(allPathName[paramKey.index]);\n      return values;\n    }, []);\n  }\n\n  /**\n   * Returns an array with all named param ids and their position in the path\n   * Private\n   **/\n  function namedParamsWithIndex() {\n    const namedUrlParams = getPathNames(namedUrl);\n\n    return namedUrlParams.reduce((validParams, param, index) => {\n      if (param[0] === \":\") {\n        validParams.push({ value: param.slice(1), index });\n      }\n      return validParams;\n    }, []);\n  }\n\n  /**\n   * Wrapper for URL.port\n   *\n   **/\n  function port() {\n    return urlBase.port;\n  }\n\n  /**\n   * Wrapper for URL.pathname\n   *\n   **/\n  function pathname() {\n    return urlBase.pathname;\n  }\n\n  /**\n   * Wrapper for URL.protocol\n   *\n   **/\n  function protocol() {\n    return urlBase.protocol;\n  }\n\n  /**\n   * Wrapper for URL.search\n   *\n   **/\n  function search() {\n    return urlBase.search;\n  }\n\n  /**\n   * Returns an object with all query params and their values\n   *\n   **/\n  function queryParams() {\n    const params = {};\n    urlBase.searchParams.forEach((value, key) => {\n      params[key] = value;\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the query param keys\n   *\n   **/\n  function queryParamsKeys() {\n    const params = [];\n    urlBase.searchParams.forEach((_value, key) => {\n      params.push(key);\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the query param values\n   *\n   **/\n  function queryParamsValues() {\n    const params = [];\n    urlBase.searchParams.forEach(value => {\n      params.push(value);\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the elements of a pathname\n   *\n   **/\n  function pathNames() {\n    return getPathNames(urlBase.pathname);\n  }\n\n  /**\n   * Returns an array with all the parts of a pathname\n   * Private method\n   **/\n  function getPathNames(pathName) {\n    if (pathName === \"/\" || pathName.trim().length === 0) return [pathName];\n    if (pathName.slice(-1) === \"/\") {\n      pathName = pathName.slice(0, -1);\n    }\n    if (pathName[0] === \"/\") {\n      pathName = pathName.slice(1);\n    }\n\n    return pathName.split(\"/\");\n  }\n\n  return Object.freeze({\n    host: host(),\n    hostname: hostname(),\n    namedParams: namedParams(),\n    namedParamsKeys: namedParamsKeys(),\n    namedParamsValues: namedParamsValues(),\n    pathNames: pathNames(),\n    port: port(),\n    pathname: pathname(),\n    protocol: protocol(),\n    search: search(),\n    queryParams: queryParams(),\n    queryParamsKeys: queryParamsKeys(),\n    queryParamsValues: queryParamsValues()\n  });\n};\n\nmodule.exports = { UrlParser };\n","/**\n * Returns true if object has any nested routes empty\n * @param routeObject\n **/\nfunction anyEmptyNestedRoutes(routeObject) {\n  let result = false\n  if (Object.keys(routeObject).length === 0) {\n    return true\n  }\n\n  if (routeObject.childRoute && Object.keys(routeObject.childRoute).length === 0) {\n    result = true\n  } else if (routeObject.childRoute) {\n    result = anyEmptyNestedRoutes(routeObject.childRoute)\n  }\n\n  return result\n}\n\n/**\n * Compare two routes ignoring named params\n * @param pathName string\n * @param routeName string\n **/\n\nfunction compareRoutes(pathName, routeName) {\n  routeName = removeSlash(routeName)\n\n  if (routeName.includes(':')) {\n    return routeName.includes(pathName)\n  } else {\n    return routeName.startsWith(pathName)\n  }\n}\n\n/**\n * Returns a boolean indicating if the name of path exists in the route based on the language parameter\n * @param pathName string\n * @param route object\n * @param language string\n **/\n\nfunction findLocalisedRoute(pathName, route, language) {\n  let exists = false\n\n  if (language) {\n    return { exists: route.lang && route.lang[language] && route.lang[language].includes(pathName), language }\n  }\n\n  exists = compareRoutes(pathName, route.name)\n\n  if (!exists && route.lang && typeof route.lang === 'object') {\n    for (const [key, value] of Object.entries(route.lang)) {\n      if (compareRoutes(pathName, value)) {\n        exists = true\n        language = key\n      }\n    }\n  }\n\n  return { exists, language }\n}\n\n/**\n * Return all the consecutive named param (placeholders) of a pathname\n * @param pathname\n **/\nfunction getNamedParams(pathName = '') {\n  if (pathName.trim().length === 0) return []\n  const namedUrlParams = getPathNames(pathName)\n  return namedUrlParams.reduce((validParams, param) => {\n    if (param[0] === ':') {\n      validParams.push(param.slice(1))\n    }\n\n    return validParams\n  }, [])\n}\n\n/**\n * Split a pathname based on /\n * @param pathName\n * Private method\n **/\nfunction getPathNames(pathName) {\n  if (pathName === '/' || pathName.trim().length === 0) return [pathName]\n\n  pathName = removeSlash(pathName, 'both')\n\n  return pathName.split('/')\n}\n\n/**\n * Return the first part of a pathname until the first named param is found\n * @param name\n **/\nfunction nameToPath(name = '') {\n  let routeName\n  if (name === '/' || name.trim().length === 0) return name\n  name = removeSlash(name, 'lead')\n  routeName = name.split(':')[0]\n  routeName = removeSlash(routeName, 'trail')\n\n  return routeName.toLowerCase()\n}\n\n/**\n * Return the path name excluding query params\n * @param name\n **/\nfunction pathWithoutQueryParams(currentRoute) {\n  const path = currentRoute.path.split('?')\n  return path[0]\n}\n\n/**\n * Return the path name including query params\n * @param name\n **/\nfunction pathWithQueryParams(currentRoute) {\n  let queryParams = []\n  if (currentRoute.queryParams) {\n    for (let [key, value] of Object.entries(currentRoute.queryParams)) {\n      queryParams.push(`${key}=${value}`)\n    }\n  }\n\n  if (queryParams.length > 0) {\n    return `${currentRoute.path}?${queryParams.join('&')}`\n  } else {\n    return currentRoute.path\n  }\n}\n\n/**\n * Returns a string with trailing or leading slash character removed\n * @param pathName string\n * @param position string - lead, trail, both\n **/\nfunction removeExtraPaths(pathNames, basePathNames) {\n  const names = basePathNames.split('/')\n  if (names.length > 1) {\n    names.forEach(function(name, index) {\n      if (name.length > 0 && index > 0) {\n        pathNames.shift()\n      }\n    })\n  }\n\n  return pathNames\n}\n\n/**\n * Returns a string with trailing or leading slash character removed\n * @param pathName string\n * @param position string - lead, trail, both\n **/\n\nfunction removeSlash(pathName, position = 'lead') {\n  if (pathName.trim().length < 1) {\n    return ''\n  }\n\n  if (position === 'trail' || position === 'both') {\n    if (pathName.slice(-1) === '/') {\n      pathName = pathName.slice(0, -1)\n    }\n  }\n\n  if (position === 'lead' || position === 'both') {\n    if (pathName[0] === '/') {\n      pathName = pathName.slice(1)\n    }\n  }\n\n  return pathName\n}\n\n/**\n * Returns the name of the route based on the language parameter\n * @param route object\n * @param language string\n **/\n\nfunction routeNameLocalised(route, language = null) {\n  if (!language || !route.lang || !route.lang[language]) {\n    return route.name\n  } else {\n    return route.lang[language]\n  }\n}\n\n/**\n * Updates the base route path.\n * Route objects can have nested routes (childRoutes) or just a long name like \"admin/employees/show/:id\"\n *\n * @param basePath string\n * @param pathNames array\n * @param route object\n * @param language string\n **/\n\nfunction updateRoutePath(basePath, pathNames, route, language, convert = false) {\n  if (basePath === '/' || basePath.trim().length === 0) return { result: basePath, language: null }\n\n  let basePathResult = basePath\n  let routeName = route.name\n  let currentLanguage = language\n\n  if (convert) {\n    currentLanguage = ''\n  }\n\n  routeName = removeSlash(routeName)\n  basePathResult = removeSlash(basePathResult)\n\n  if (!route.childRoute) {\n    let localisedRoute = findLocalisedRoute(basePathResult, route, currentLanguage)\n\n    if (localisedRoute.exists && convert) {\n      basePathResult = routeNameLocalised(route, language)\n    }\n\n    let routeNames = routeName.split(':')[0]\n    routeNames = removeSlash(routeNames, 'trail')\n    routeNames = routeNames.split('/')\n    routeNames.shift()\n    routeNames.forEach(() => {\n      const currentPathName = pathNames[0]\n      localisedRoute = findLocalisedRoute(`${basePathResult}/${currentPathName}`, route, currentLanguage)\n\n      if (currentPathName && localisedRoute.exists) {\n        if (convert) {\n          basePathResult = routeNameLocalised(route, language)\n        } else {\n          basePathResult = `${basePathResult}/${currentPathName}`\n        }\n        pathNames.shift()\n      } else {\n        return { result: basePathResult, language: localisedRoute.language }\n      }\n    })\n    return { result: basePathResult, language: localisedRoute.language }\n  } else {\n    return { result: basePath, language: currentLanguage }\n  }\n}\n\nmodule.exports = {\n  anyEmptyNestedRoutes,\n  compareRoutes,\n  findLocalisedRoute,\n  getNamedParams,\n  getPathNames,\n  nameToPath,\n  pathWithQueryParams,\n  pathWithoutQueryParams,\n  removeExtraPaths,\n  removeSlash,\n  routeNameLocalised,\n  updateRoutePath\n}\n","const { UrlParser } = require('url-params-parser')\n\nconst { pathWithQueryParams, removeSlash } = require('../lib/utils')\n\nfunction RouterCurrent(trackPage) {\n  const trackPageview = trackPage || false\n  let activeRoute = ''\n\n  function setActive(newRoute) {\n    activeRoute = newRoute.path\n    pushActiveRoute(newRoute)\n  }\n\n  function active() {\n    return activeRoute\n  }\n\n  /**\n   * Returns true if pathName is current active route\n   * @param pathName String The path name to check against the current route.\n   * @param includePath Boolean if true checks that pathName is included in current route. If false should match it.\n   **/\n  function isActive(queryPath, includePath = false) {\n    if (queryPath[0] !== '/') {\n      queryPath = '/' + queryPath\n    }\n\n    // remove query params for comparison\n    let pathName = UrlParser(`http://fake.com${queryPath}`).pathname\n    let activeRoutePath = UrlParser(`http://fake.com${activeRoute}`).pathname\n\n    pathName = removeSlash(pathName, 'trail')\n\n    activeRoutePath = removeSlash(activeRoutePath, 'trail')\n\n    if (includePath) {\n      return activeRoutePath.includes(pathName)\n    } else {\n      return activeRoutePath === pathName\n    }\n  }\n\n  function pushActiveRoute(newRoute) {\n    if (typeof window !== 'undefined') {\n      const pathAndSearch = pathWithQueryParams(newRoute)\n      //if (window.history && window.history.state && window.history.state.page !== pathAndSearch) {\n      window.history.pushState({ page: pathAndSearch }, '', pathAndSearch)\n      if (trackPageview) {\n        gaTracking(pathAndSearch)\n      }\n    }\n  }\n\n  function gaTracking(newPage) {\n    if (typeof ga !== 'undefined') {\n      ga('set', 'page', newPage)\n      ga('send', 'pageview')\n    }\n  }\n\n  return Object.freeze({ active, isActive, setActive })\n}\n\nmodule.exports = { RouterCurrent }\n","function RouterGuard(onlyIf) {\n  const guardInfo = onlyIf\n\n  function valid() {\n    return guardInfo && guardInfo.guard && typeof guardInfo.guard === 'function'\n  }\n\n  function redirect() {\n    return !guardInfo.guard()\n  }\n\n  function redirectPath() {\n    let destinationUrl = '/'\n    if (guardInfo.redirect && guardInfo.redirect.length > 0) {\n      destinationUrl = guardInfo.redirect\n    }\n\n    return destinationUrl\n  }\n\n  return Object.freeze({ valid, redirect, redirectPath })\n}\n\nmodule.exports = { RouterGuard }\n","const { RouterGuard } = require('./guard')\n\nfunction RouterRedirect(route, currentPath) {\n  const guard = RouterGuard(route.onlyIf)\n\n  function path() {\n    let redirectTo = currentPath\n    if (route.redirectTo && route.redirectTo.length > 0) {\n      redirectTo = route.redirectTo\n    }\n\n    if (guard.valid() && guard.redirect()) {\n      redirectTo = guard.redirectPath()\n    }\n\n    return redirectTo\n  }\n\n  return Object.freeze({ path })\n}\n\nmodule.exports = { RouterRedirect }\n","const { UrlParser } = require('url-params-parser')\n\nfunction RouterRoute({ routeInfo, path, routeNamedParams, urlParser, namedPath, language }) {\n  function namedParams() {\n    const parsedParams = UrlParser(`https://fake.com${urlParser.pathname}`, namedPath).namedParams\n\n    return { ...routeNamedParams, ...parsedParams }\n  }\n\n  function get() {\n    return {\n      name: path,\n      component: routeInfo.component,\n      layout: routeInfo.layout,\n      queryParams: urlParser.queryParams,\n      namedParams: namedParams(),\n      path,\n      language\n    }\n  }\n\n  return Object.freeze({ get, namedParams })\n}\n\nmodule.exports = { RouterRoute }\n","const { updateRoutePath, getNamedParams, nameToPath, removeExtraPaths, routeNameLocalised } = require('../lib/utils')\n\nfunction RouterPath({ basePath, basePathName, pathNames, convert, currentLanguage }) {\n  let updatedPathRoute\n  let route\n  let routePathLanguage = currentLanguage\n\n  function updatedPath(currentRoute) {\n    route = currentRoute\n    updatedPathRoute = updateRoutePath(basePathName, pathNames, route, routePathLanguage, convert)\n    routePathLanguage = convert ? currentLanguage : updatedPathRoute.language\n\n    return updatedPathRoute\n  }\n\n  function localisedPathName() {\n    return routeNameLocalised(route, routePathLanguage)\n  }\n\n  function localisedRouteWithoutNamedParams() {\n    return nameToPath(localisedPathName())\n  }\n\n  function basePathNameWithoutNamedParams() {\n    return nameToPath(updatedPathRoute.result)\n  }\n\n  function namedPath() {\n    const localisedPath = localisedPathName()\n\n    return basePath ? `${basePath}/${localisedPath}` : localisedPath\n  }\n\n  function routePath() {\n    let routePathValue = `${basePath}/${basePathNameWithoutNamedParams()}`\n    if (routePathValue === '//') {\n      routePathValue = '/'\n    }\n\n    if (routePathLanguage) {\n      pathNames = removeExtraPaths(pathNames, localisedRouteWithoutNamedParams())\n    }\n\n    const namedParams = getNamedParams(localisedPathName())\n    if (namedParams && namedParams.length > 0) {\n      namedParams.forEach(function() {\n        if (pathNames.length > 0) {\n          routePathValue += `/${pathNames.shift()}`\n        }\n      })\n    }\n\n    return routePathValue\n  }\n\n  function routeLanguage() {\n    return routePathLanguage\n  }\n\n  function basePathSameAsLocalised() {\n    return basePathNameWithoutNamedParams() === localisedRouteWithoutNamedParams()\n  }\n\n  return Object.freeze({\n    basePathSameAsLocalised,\n    updatedPath,\n    basePathNameWithoutNamedParams,\n    localisedPathName,\n    localisedRouteWithoutNamedParams,\n    namedPath,\n    pathNames,\n    routeLanguage,\n    routePath\n  })\n}\n\nmodule.exports = { RouterPath }\n","const { UrlParser } = require('url-params-parser')\n\nconst { RouterRedirect } = require('./redirect')\nconst { RouterRoute } = require('./route')\nconst { RouterPath } = require('./path')\nconst { anyEmptyNestedRoutes, pathWithoutQueryParams } = require('../lib/utils')\n\nconst NotFoundPage = '/404.html'\n\nfunction RouterFinder({ routes, currentUrl, routerOptions, convert }) {\n  const defaultLanguage = routerOptions.defaultLanguage\n  const urlParser = UrlParser(currentUrl)\n  let redirectTo = ''\n  let routeNamedParams = {}\n\n  function findActiveRoute() {\n    let searchActiveRoute = searchActiveRoutes(routes, '', urlParser.pathNames, routerOptions.lang, convert)\n\n    if (!searchActiveRoute || !Object.keys(searchActiveRoute).length || anyEmptyNestedRoutes(searchActiveRoute)) {\n      if (typeof window !== 'undefined') {\n        searchActiveRoute = routeNotFound(routerOptions.lang)\n      }\n    } else {\n      searchActiveRoute.path = pathWithoutQueryParams(searchActiveRoute)\n    }\n\n    return searchActiveRoute\n  }\n\n  /**\n   * Gets an array of routes and the browser pathname and return the active route\n   * @param routes\n   * @param basePath\n   * @param pathNames\n   **/\n  function searchActiveRoutes(routes, basePath, pathNames, currentLanguage, convert) {\n    let currentRoute = {}\n    let basePathName = pathNames.shift().toLowerCase()\n    const routerPath = RouterPath({ basePath, basePathName, pathNames, convert, currentLanguage })\n\n    routes.forEach(function (route) {\n      routerPath.updatedPath(route)\n      if (routerPath.basePathSameAsLocalised()) {\n        let routePath = routerPath.routePath()\n\n        redirectTo = RouterRedirect(route, redirectTo).path()\n\n        if (currentRoute.name !== routePath) {\n          currentRoute = setCurrentRoute({\n            route,\n            routePath,\n            routeLanguage: routerPath.routeLanguage(),\n            urlParser,\n            namedPath: routerPath.namedPath(),\n          })\n        }\n\n        if (route.nestedRoutes && route.nestedRoutes.length > 0 && routerPath.pathNames.length > 0) {\n          currentRoute.childRoute = searchActiveRoutes(\n            route.nestedRoutes,\n            routePath,\n            routerPath.pathNames,\n            routerPath.routeLanguage(),\n            convert\n          )\n          currentRoute.path = currentRoute.childRoute.path\n          currentRoute.language = currentRoute.childRoute.language\n        } else if (nestedRoutesAndNoPath(route, routerPath.pathNames)) {\n          const indexRoute = searchActiveRoutes(\n            route.nestedRoutes,\n            routePath,\n            ['index'],\n            routerPath.routeLanguage(),\n            convert\n          )\n          if (indexRoute && Object.keys(indexRoute).length > 0) {\n            currentRoute.childRoute = indexRoute\n            currentRoute.language = currentRoute.childRoute.language\n          }\n        }\n      }\n    })\n\n    if (redirectTo) {\n      currentRoute.redirectTo = redirectTo\n    }\n\n    return currentRoute\n  }\n\n  function nestedRoutesAndNoPath(route, pathNames) {\n    return route.nestedRoutes && route.nestedRoutes.length > 0 && pathNames.length === 0\n  }\n\n  function setCurrentRoute({ route, routePath, routeLanguage, urlParser, namedPath }) {\n    const routerRoute = RouterRoute({\n      routeInfo: route,\n      urlParser,\n      path: routePath,\n      routeNamedParams,\n      namedPath,\n      language: routeLanguage || defaultLanguage,\n    })\n    routeNamedParams = routerRoute.namedParams()\n\n    return routerRoute.get()\n  }\n\n  function routeNotFound(customLanguage) {\n    const custom404Page = routes.find((route) => route.name == '404')\n    const language = customLanguage || defaultLanguage || ''\n    if (custom404Page) {\n      return { ...custom404Page, language, path: '404' }\n    } else {\n      return { name: '404', component: '', path: '404', redirectTo: NotFoundPage }\n    }\n  }\n\n  return Object.freeze({ findActiveRoute })\n}\n\nmodule.exports = { RouterFinder }\n","const { activeRoute } = require('./store')\nconst { RouterCurrent } = require('./router/current')\nconst { RouterFinder } = require('./router/finder')\nconst { removeSlash } = require('./lib/utils')\n\nconst NotFoundPage = '/404.html'\n\nlet userDefinedRoutes = []\nlet routerOptions = {}\nlet routerCurrent\n\n/**\n * Object exposes one single property: activeRoute\n * @param routes  Array of routes\n * @param currentUrl current url\n * @param options configuration options\n **/\nfunction SpaRouter(routes, currentUrl, options = {}) {\n  routerOptions = { ...options }\n  if (typeof currentUrl === 'undefined' || currentUrl === '') {\n    currentUrl = document.location.href\n  }\n\n  routerCurrent = RouterCurrent(routerOptions.gaPageviews)\n\n  currentUrl = removeSlash(currentUrl, 'trail')\n  userDefinedRoutes = routes\n\n  function findActiveRoute() {\n    let convert = false\n\n    if (routerOptions.langConvertTo) {\n      routerOptions.lang = routerOptions.langConvertTo\n      convert = true\n    }\n\n    return RouterFinder({ routes, currentUrl, routerOptions, convert }).findActiveRoute()\n  }\n\n  /**\n   * Redirect current route to another\n   * @param destinationUrl\n   **/\n  function navigateNow(destinationUrl) {\n    if (typeof window !== 'undefined') {\n      if (destinationUrl === NotFoundPage) {\n        routerCurrent.setActive({ path: NotFoundPage })\n      } else {\n        navigateTo(destinationUrl)\n      }\n    }\n\n    return destinationUrl\n  }\n\n  function setActiveRoute() {\n    const currentRoute = findActiveRoute()\n    if (currentRoute.redirectTo) {\n      return navigateNow(currentRoute.redirectTo)\n    }\n\n    routerCurrent.setActive(currentRoute)\n    activeRoute.set(currentRoute)\n\n    return currentRoute\n  }\n\n  return Object.freeze({\n    setActiveRoute,\n    findActiveRoute\n  })\n}\n\n/**\n * Converts a route to its localised version\n * @param pathName\n **/\nfunction localisedRoute(pathName, language) {\n  pathName = removeSlash(pathName, 'lead')\n  routerOptions.langConvertTo = language\n\n  return SpaRouter(userDefinedRoutes, 'http://fake.com/' + pathName, routerOptions).findActiveRoute()\n}\n\n/**\n * Updates the current active route and updates the browser pathname\n * @param pathName String\n * @param language String\n **/\nfunction navigateTo(pathName, language = null) {\n  pathName = removeSlash(pathName, 'lead')\n\n  if (language) {\n    routerOptions.langConvertTo = language\n  }\n\n  return SpaRouter(userDefinedRoutes, 'http://fake.com/' + pathName, routerOptions).setActiveRoute()\n}\n\n/**\n * Returns true if pathName is current active route\n * @param pathName String The path name to check against the current route.\n * @param includePath Boolean if true checks that pathName is included in current route. If false should match it.\n **/\nfunction routeIsActive(queryPath, includePath = false) {\n  return routerCurrent.isActive(queryPath, includePath)\n}\n\nif (typeof window !== 'undefined') {\n  // Avoid full page reload on local routes\n  window.addEventListener('click', event => {\n    if (event.target.pathname && event.target.hostname === window.location.hostname && event.target.localName === 'a') {\n      event.preventDefault()\n      // event.stopPropagation()\n      navigateTo(event.target.pathname + event.target.search)\n    }\n  })\n\n  window.onpopstate = function(_event) {\n    navigateTo(window.location.pathname + window.location.search)\n  }\n}\n\nmodule.exports = { SpaRouter, localisedRoute, navigateTo, routeIsActive }\n","<script>\n  export let currentRoute = {}\n  export let params = {}\n</script>\n\n{#if currentRoute.layout}\n  <svelte:component this={currentRoute.layout} currentRoute={{ ...currentRoute, layout: '' }} {params} />\n{:else if currentRoute.component}\n  <svelte:component this={currentRoute.component} currentRoute={{ ...currentRoute, component: '' }} {params} />\n{:else if currentRoute.childRoute}\n  <svelte:self currentRoute={currentRoute.childRoute} {params} />\n{/if}\n","<script>\n  import { onMount } from 'svelte'\n\n  import { SpaRouter } from '../spa_router'\n  import Route from './route.svelte'\n  import { activeRoute } from '../store'\n\n  export let routes = []\n  export let options = {}\n\n  onMount(function() {\n    SpaRouter(routes, document.location.href, options).setActiveRoute()\n  })\n</script>\n\n<Route currentRoute={$activeRoute} />\n","<script>\n  import { onMount } from 'svelte'\n  import { localisedRoute, navigateTo, routeIsActive } from '../spa_router'\n  export let to = '/'\n  export let title = ''\n  export let styles = ''\n  export let lang = null\n\n  onMount(function() {\n    if (lang) {\n      const route = localisedRoute(to, lang)\n      if (route) {\n        to = route.path\n      }\n    }\n  })\n\n  function navigate(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    navigateTo(to)\n  }\n</script>\n\n<a href={to} {title} on:click={navigate} class={styles} class:active={routeIsActive(to)}>\n  <slot />\n</a>\n","const { SpaRouter, navigateTo, localisedRoute, routeIsActive } = require('./spa_router')\nconst Route = require('./components/route.svelte')\nconst Router = require('./components/router.svelte')\nconst Navigate = require('./components/navigate.svelte')\n\nmodule.exports = {\n  SpaRouter,\n  localisedRoute,\n  navigateTo,\n  routeIsActive,\n  Route,\n  Router,\n  Navigate\n}\n","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","import { writable } from \"svelte/store\";\n\nexport const ROLES = {\n  PLAYER: \"PLAYER\",\n  HOST: \"HOST\",\n};\n\nexport const game = writable({});\nexport const role = writable(ROLES.HOST);\nexport const player = writable({ id: \"\", name: \"\" });\n","<script>\n  import { onMount } from \"svelte\";\n  import { Navigate, navigateTo } from \"svelte-router-spa\";\n  import Cookies from \"js-cookie\";\n\n  import { game, player, role, ROLES } from \"../../stores\";\n\n  export let currentRoute;\n  export let params;\n  const gameInProgress = Cookies.getJSON(\"gameInProgress\");\n\n  onMount(() => {\n    if (gameInProgress) {\n      document.getElementById(\"reconnect-modal\").click();\n    }\n  });\n\n  const rejoinGame = () => {\n    if (gameInProgress.role === ROLES.HOST) {\n      role.set(ROLES.HOST);\n    } else {\n      player.set(gameInProgress.player);\n      role.set(ROLES.PLAYER);\n    }\n    navigateTo(`/game/${gameInProgress.game.gameId}`);\n  };\n</script>\n\n<style>\n  .homepage {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: space-evenly;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  .rejoin-button-container > * {\n    width: 30%;\n\n    text-align: center;\n  }\n\n  .rejoin-button-container {\n    display: flex;\n    justify-content: space-evenly;\n  }\n\n  .button-container {\n    width: 55%;\n    max-width: 500px;\n  }\n\n  button {\n    width: 100%;\n    height: 100%;\n  }\n\n  .about {\n    position: absolute;\n    bottom: 20px;\n\n    text-align: center;\n  }\n</style>\n\n<div class=\"homepage\">\n  <!-- TODO: Make this a component -->\n  <input class=\"modal-state\" id=\"reconnect-modal\" type=\"checkbox\" />\n  <div class=\"modal\">\n    <label class=\"modal-bg\" for=\"reconnect-modal\" />\n    <div class=\"modal-body\">\n      <label class=\"btn-close\" for=\"reconnect-modal\">X</label>\n      <h4 class=\"modal-title\">It looks like you have a game in progress!</h4>\n      <p class=\"modal-text\">\n        Do you want to rejoin the game\n        <span class=\"text-muted\">\n          {gameInProgress && gameInProgress.game.gameId}\n        </span>\n        ?\n      </p>\n      <div class=\"rejoin-button-container\">\n        <button on:click={rejoinGame}>Yes</button>\n        <label class=\"paper-btn\" for=\"reconnect-modal\">No</label>\n      </div>\n    </div>\n  </div>\n  <div class=\"button-container\">\n    <Navigate to=\"/setup\">\n      <button>Start new game</button>\n    </Navigate>\n  </div>\n\n  <div class=\"button-container\">\n    <Navigate to=\"/join\">\n      <button>Join game</button>\n    </Navigate>\n  </div>\n\n  <div class=\"about\">\n    Made by\n    <a class=\"text-secondary\" href=\"http://benslater.tech\">Ben Slater</a>\n    using\n    <a class=\"text-secondary\" href=\"https://svelte.dev/\">Svelte,</a>\n    <a class=\"text-secondary\" href=\"https://sailsjs.com/\">Sails.js,</a>\n    and\n    <a class=\"text-secondary\" href=\"https://www.getpapercss.com\">Paper CSS</a>\n  </div>\n</div>\n","let _csrf;\n\nexport default async (url, opts) => {\n  if (!_csrf) {\n    const { _csrf: csrf } = await (\n      await fetch(\"http://localhost:3000/api/get-csrf\")\n    ).json();\n    _csrf = csrf;\n  }\n\n  const fetchOpts = {\n    ...opts,\n    body: [\"POST\", \"PUT\", \"DELETE\"].includes(opts.method)\n      ? JSON.stringify({ ...opts.body, _csrf })\n      : undefined,\n  };\n\n  return await fetch(url, fetchOpts);\n};\n","<script>\n  import { navigateTo } from \"svelte-router-spa\";\n  import { role, ROLES } from \"../../stores\";\n  import request from \"../../utils/request\";\n\n  export let currentRoute;\n  export let params;\n\n  let rounds = [[{}]];\n  let width = 0;\n  $: isMobile = width < 768;\n\n  const addQuestion = roundIndex => {\n    rounds[roundIndex] = [...rounds[roundIndex], {}];\n  };\n\n  const addRound = () => {\n    rounds = [...rounds, [{}]];\n  };\n\n  const createGame = async () => {\n    const res = await request(\"http://localhost:3000/api/game/create\", {\n      method: \"POST\",\n      body: {\n        rounds\n      }\n    });\n    const { gameId } = await res.json();\n\n    role.set(ROLES.HOST);\n    navigateTo(`/game/${gameId}`);\n  };\n\n  const deleteQuestion = (roundIndex, questionIndex) => {\n    rounds[roundIndex].splice(questionIndex, 1);\n    rounds = rounds;\n  };\n</script>\n\n<style>\n  h4 {\n    white-space: pre;\n  }\n\n  hr {\n    margin-top: 40px;\n  }\n\n  .add-question-separator {\n    margin: 40px 0;\n  }\n\n  .add-question-button-container {\n    display: flex;\n    justify-content: center;\n  }\n\n  .delete-question-button {\n    width: 100%;\n  }\n\n  .delete-question-button-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .card {\n    margin-bottom: 20px;\n  }\n\n  .add-question {\n    width: 100%;\n    max-width: 500px;\n  }\n\n  .bottom-buttons {\n    display: flex;\n\n    margin-bottom: 20px;\n  }\n\n  .bottom-buttons button {\n    flex: 1;\n\n    margin: 0 20px;\n  }\n\n  @media (min-width: 768px) {\n    .delete-question-button {\n      width: 50px;\n      height: 50px;\n    }\n  }\n</style>\n\n<svelte:window bind:innerWidth={width} />\n\n<div>\n  <h2>Enter questions and answers</h2>\n  {#each rounds as questions, roundIndex}\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h3 class=\"\">Round {roundIndex + 1}</h3>\n        {#each questions as question, questionIndex}\n          {#if questionIndex > 0}\n            <hr />\n          {/if}\n          <div class=\"row\">\n            <h4 class=\"col sm-2\">Q{questionIndex + 1}:</h4>\n            <div class=\"form-group col sm-4\">\n              <label for={`question-input-${questionIndex + 1}`}>\n                Question:\n              </label>\n              <input\n                bind:value={questions[questionIndex].question}\n                class=\"input-block\"\n                type=\"text\"\n                id={`question-input-${questionIndex + 1}`} />\n            </div>\n            <div class=\"form-group col sm-4\">\n              <label for={`answer-input-${questionIndex + 1}`}>Answer:</label>\n              <input\n                bind:value={questions[questionIndex].answer}\n                class=\"input-block\"\n                type=\"text\"\n                id={`answer-input-${questionIndex + 1}`} />\n            </div>\n            <div class=\"col sm-2 delete-question-button-container\">\n              <button\n                class=\"background-danger delete-question-button\"\n                on:click={() => deleteQuestion(roundIndex, questionIndex)}>\n                {isMobile ? 'Delete question' : '✘'}\n              </button>\n            </div>\n          </div>\n        {/each}\n        <hr class=\"add-question-separator\" />\n        <div class=\"add-question-button-container\">\n          <button\n            class=\"add-question background-primary\"\n            on:click={() => addQuestion(roundIndex)}>\n            Add question\n          </button>\n        </div>\n      </div>\n    </div>\n  {/each}\n  <div class=\"bottom-buttons\">\n    <button class=\"background-secondary\" on:click={addRound}>Add round</button>\n    <button class=\"background-success\" on:click={createGame}>\n      Create game\n    </button>\n  </div>\n</div>\n","<script>\n  import { navigateTo } from \"svelte-router-spa\";\n  import { v4 as uuid4 } from \"uuid\";\n\n  import { game, role, player, ROLES } from \"../../stores\";\n  import request from \"../../utils/request\";\n  export let currentRoute;\n  export let params;\n\n  let gameId = \"\";\n  let name = \"\";\n\n  $: isJoinDisabled = !gameId.match(/\\w-\\w/) || name === \"\";\n\n  const goToGame = async () => {\n    role.set(ROLES.PLAYER);\n    const res = await request(\"http://localhost:3000/api/player/create\", {\n      method: \"POST\",\n      body: {\n        name,\n        gameId: gameId.toLowerCase()\n      }\n    });\n    const { id } = await res.json();\n    player.set({ id, name });\n    navigateTo(`/game/${gameId}`);\n  };\n\n  // TODO: Recover into disconnected game\n  // TODO: Better player identity (e.g. FB/Google)\n\n  const lowercaseInput = input => {\n    gameId = input.toLowerCase();\n  };\n</script>\n\n<style>\n  /* A LOT of duplication here. Look into svelte layout */\n  h2 {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n\n    margin: 0;\n  }\n\n  .join-page {\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  .inputs {\n    display: flex;\n    align-items: center;\n    flex: 4;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .bottom-section {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n\n    width: 100%;\n  }\n\n  button {\n    width: 100%;\n    max-width: 500px;\n  }\n</style>\n\n<div class=\"join-page\">\n  <h2>Enter game ID:</h2>\n\n  <div class=\"inputs\">\n    <div class=\"form-group\">\n      <label for=\"gameId\">Game ID:</label>\n      <input\n        bind:value={gameId}\n        on:input={lowercaseInput(gameId)}\n        type=\"text\"\n        placeholder=\"Enter game ID...\"\n        id=\"gameId\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input\n        bind:value={name}\n        type=\"text\"\n        placeholder=\"Enter name...\"\n        id=\"name\" />\n    </div>\n  </div>\n\n  <div class=\"bottom-section\">\n    <button\n      class:background-success={!isJoinDisabled}\n      disabled={isJoinDisabled}\n      on:click={goToGame}>\n      Join game\n    </button>\n  </div>\n</div>\n","<script>\n  export let players = [];\n</script>\n\n<style>\n  h3 {\n    margin: 0 0 20px 0;\n  }\n</style>\n\n<div>\n  <h3>Players:</h3>\n  {#each players as player}\n    <ul>\n      <li>{player.name}</li>\n    </ul>\n  {/each}\n</div>\n","<script>\n  export let players = [];\n</script>\n\n<style>\n\n</style>\n\n<div>\n  <div>SCORES:</div>\n  {#each players as player}\n    <p>\n      {player.name}: {player.answers.filter(answer => answer.result === 'CORRECT').length}\n    </p>\n  {/each}\n</div>\n","<script>\n  export let answers = [];\n  export let onMarkAnswer;\n</script>\n\n<style>\n  button {\n    margin: 0;\n    padding: 0;\n    height: 50px;\n    width: 50px;\n  }\n  .row {\n    align-items: center;\n    justify-content: space-evenly;\n\n    padding: 0;\n    margin: 0;\n  }\n</style>\n\n<div>\n  {#each answers as answer}\n    <div class=\"row\">\n      <div class=\"col col-6\">{answer.answer}</div>\n      <!-- {#if answer.result === ''} -->\n      <div class=\"col col-6 row\">\n        <button\n          class:background-success={answer.result === 'CORRECT'}\n          on:click={() => onMarkAnswer(answer.id, 'CORRECT')}>\n          ✔\n        </button>\n        <button\n          class:background-danger={answer.result === 'INCORRECT'}\n          on:click={() => onMarkAnswer(answer.id, 'INCORRECT')}>\n          ✘\n        </button>\n      </div>\n      <!-- {:else} -->\n      <!-- {/if} -->\n    </div>\n  {/each}\n</div>\n","<script>\n  export let enabled;\n  export let gameStateAnswer = 0;\n  export let onSubmit;\n\n  let answer;\n</script>\n\n<style>\n  .answer-input {\n    display: flex;\n  }\n\n  .row {\n    flex: 1;\n  }\n\n  .submit-button {\n    width: 100%;\n  }\n</style>\n\n<div class=\"answer-input\">\n  <div class=\"row\">\n    <div class=\"col col-fill\">\n      <div class=\"form-group\">\n        <label for={`answer-input-${gameStateAnswer}`}>Answer:</label>\n        <input\n          id={`answer-input-${gameStateAnswer}`}\n          class=\"input-block\"\n          type=\"text\"\n          bind:value={answer}\n          disabled={!enabled} />\n      </div>\n      <button\n        class=\"submit-button\"\n        class:background-success={enabled}\n        disabled={!enabled}\n        on:click={() => onSubmit(answer)}>\n        {!enabled ? 'Waiting for next question...' : 'Submit'}\n      </button>\n    </div>\n  </div>\n</div>\n","let _csrf;\n\nexport default {\n  post: async (url, body) => {\n    if (!_csrf) {\n      const { _csrf: csrf } = await (\n        await fetch(\"http://localhost:3000/api/get-csrf\")\n      ).json();\n      _csrf = csrf;\n    }\n\n    return await io.socket.post(url, { ...body, _csrf });\n  },\n  get: async (url) => await io.socket.get(url),\n  on: (url, callback) => io.socket.on(url, callback),\n};\n","<script>\n  import { onMount } from \"svelte\";\n  import Cookies from \"js-cookie\";\n\n  import PlayerList from \"./components/player-list.svelte\";\n  import PlayerScores from \"./components/player-scores.svelte\";\n  import PlayerAnswers from \"./components/player-answers.svelte\";\n  import AnswerInput from \"./components/answer-input.svelte\";\n  import LoadingDots from \"../../components/loading-dots/index.svelte\";\n\n  import { game, role, ROLES, player } from \"../../stores.js\";\n  import socket from \"../../utils/socket\";\n\n  export let currentRoute;\n  export let params;\n\n  let answer = \"\";\n  let titleText =\n    $role === ROLES.HOST\n      ? \"Waiting for players to join...\"\n      : \"Waiting for game to start...\";\n  // TODO: Base this off a response from the websocket\n  let answerSubmitted = false;\n  let currentRoundIndex = 0;\n  let currentQuestionIndex = 0;\n\n  $: isGameStarted = $game && $game.state && $game.state.started;\n  $: isGameOver = $game && $game.state && $game.state.gameOver;\n  $: isEndOfRound = $game && $game.state && $game.state.endOfRound;\n  $: players = ($game && $game.players) || [];\n  $: roundIndex = $game && $game.state ? $game.state.round : undefined;\n  $: questionIndex = $game && $game.state ? $game.state.question : undefined;\n  $: currentRound =\n    ($game && $game.rounds && $game.rounds[roundIndex]) || undefined;\n  $: currentQuestion =\n    (currentRound && currentRound.questions[questionIndex]) || undefined;\n  $: playerAnswers = (currentQuestion && currentQuestion.playerAnswers) || [];\n  $: nextDisabled =\n    !players.length || (isGameStarted && playerAnswers.length < players.length);\n\n  const {\n    namedParams: { id: gameId }\n  } = currentRoute;\n\n  onMount(async () => {\n    socket.on(\"gameUpdate\", data => {\n      game.set(data.game);\n\n      if (!Cookies.getJSON(\"gameInProgress\")) {\n        Cookies.set(\n          \"gameInProgress\",\n          {\n            player: $player,\n            game: { id: $game.id, gameId: $game.gameId },\n            role: $role\n          },\n          { expires: 1 }\n        );\n      }\n\n      // TODO: Move into template, just use $game.state to compute title.\n      if ($game.state.started) {\n        console.log($game);\n        titleText = `Round ${roundIndex + 1}: Question ${questionIndex + 1}`;\n      }\n      if ($game.state.finished) {\n        titleText = \"Final scores:\";\n        Cookies.remove(\"gameInProgress\");\n      }\n      if ($game.state.endOfRound) {\n        titleText = \"End of round!\";\n      }\n      if ($game.state.gameOver) {\n        titleText = \"Game over!\";\n      }\n\n      if (currentRoundIndex !== roundIndex) {\n        currentRoundIndex = roundIndex;\n        answerSubmitted = false;\n      }\n      if (currentQuestionIndex !== $game.state.question) {\n        currentQuestionIndex = $game.state.question;\n        answerSubmitted = false;\n      }\n    });\n    socket.get(`localhost:3000/api/game/${gameId}/join`);\n  });\n\n  const nextQuestion = () =>\n    socket.post(`localhost:3000/api/game/${gameId}/next`);\n\n  const submitAnswer = answer => {\n    answerSubmitted = true;\n    socket.post(`localhost:3000/api/game/${gameId}/answer`, {\n      playerId: $player.id,\n      questionId: $game.rounds[roundIndex].questions[questionIndex].id,\n      answer\n    });\n  };\n\n  const markAnswer = (answerId, result) => {\n    socket.post(`localhost:3000/api/game/${gameId}/answer/${answerId}/mark`, {\n      result\n    });\n  };\n</script>\n\n<style>\n  hr {\n    margin: 50px 0;\n  }\n\n  h2 {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n\n    margin: 0;\n  }\n\n  h4 {\n    margin: 20px 0;\n  }\n\n  .game-page {\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  .main-section {\n    display: flex;\n    overflow: auto;\n    flex: 4;\n    flex-direction: column;\n\n    padding: 20px 0 0 0;\n  }\n\n  .question-answer {\n    flex: 1;\n  }\n\n  .question-answer-text {\n    display: flex;\n    align-items: center;\n    flex: 1;\n\n    margin: 0 20px;\n  }\n\n  .answer-input {\n    flex: 2;\n  }\n\n  .player-list {\n    flex: 2;\n  }\n  .player-answers {\n    flex: 2;\n  }\n\n  .player-scores {\n    flex: 2;\n  }\n\n  .bottom-section {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n\n    width: 100%;\n  }\n\n  .start-next-button {\n    width: 100%;\n    max-width: 500px;\n  }\n\n  @media (min-width: 768px) {\n    .main-section {\n      width: 500px;\n      margin: auto;\n    }\n  }\n</style>\n\n<div class=\"game-page\">\n  <h2 class=\"title\">{titleText}</h2>\n  <div class=\"main-section\">\n    <!-- TODO: Optional chaining support in rollup/eslint? $game?.state?.started-->\n    {#if isGameStarted}\n      {#if !isEndOfRound}\n        <div class=\"question-answer\">\n          <h4>Question:</h4>\n          <div class=\"question-answer-text\">{currentQuestion.question}</div>\n          {#if $role === ROLES.HOST}\n            <h4>Answer:</h4>\n            <div class=\"question-answer-text\">{currentQuestion.answer}</div>\n          {/if}\n        </div>\n        {#if $role === ROLES.PLAYER}\n          <div class=\"answer-input\">\n            <AnswerInput\n              enabled={!answerSubmitted}\n              gameStateAnswer={$game.state.answer}\n              onSubmit={submitAnswer} />\n          </div>\n        {:else}\n          <div class=\"player-answers\">\n            <hr />\n            <h4>Player answers:</h4>\n            <PlayerAnswers answers={playerAnswers} onMarkAnswer={markAnswer} />\n          </div>\n        {/if}\n      {:else if $game && $game.state && ($game.state.endOfRound || $game.state.gameOver) && players && players.length}\n        <div class=\"player-scores\">\n          <PlayerScores {players} />\n        </div>\n      {/if}\n    {:else}\n      <div class=\"player-list\">\n        <PlayerList {players} />\n      </div>\n      {#if $role === ROLES.PLAYER}\n        <div class=\"bottom-section\">\n          <div>Waiting for host to start game</div>\n          <LoadingDots />\n        </div>\n      {/if}\n    {/if}\n  </div>\n  {#if $role === ROLES.HOST && !($game && $game.state && $game.state.gameOver)}\n    <div class=\"bottom-section\">\n      <button\n        class=\"start-next-button\"\n        class:background-success={!nextDisabled}\n        disabled={nextDisabled}\n        on:click={nextQuestion}>\n        {$game && $game.state && $game.state.started ? 'Next Question' : 'Start Game'}\n      </button>\n    </div>\n  {/if}\n</div>\n","import Homepage from \"./pages/homepage/index.svelte\";\nimport Setup from \"./pages/setup/index.svelte\";\nimport Join from \"./pages/join/index.svelte\";\nimport Game from \"./pages/game/index.svelte\";\n\nconst userIsAdmin = () => {\n  //check if user is admin and returns true or false\n};\n\nconst routes = [\n  {\n    name: \"/\",\n    component: Homepage,\n  },\n  {\n    name: \"/setup\",\n    component: Setup,\n  },\n  {\n    name: \"/join\",\n    component: Join,\n  },\n  {\n    name: \"/game/:id\",\n    component: Game,\n  },\n];\n\nexport { routes };\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","router","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","_","activeRoute","route","remove","urlString","namedUrl","urlBase","URL","namedParamsWithIndex","getPathNames","reduce","validParams","param","pathNames","pathname","pathName","trim","split","freeze","host","hostname","namedParams","allPathName","paramKey","namedParamsKeys","namedParamsValues","port","protocol","search","queryParams","params","searchParams","key","queryParamsKeys","_value","queryParamsValues","compareRoutes","routeName","removeSlash","includes","startsWith","findLocalisedRoute","language","exists","lang","entries","position","routeNameLocalised","anyEmptyNestedRoutes","routeObject","keys","childRoute","getNamedParams","nameToPath","toLowerCase","pathWithQueryParams","currentRoute","path","join","pathWithoutQueryParams","removeExtraPaths","basePathNames","names","shift","updateRoutePath","basePath","convert","basePathResult","currentLanguage","localisedRoute","routeNames","currentPathName","UrlParser","require$$0","require$$1","RouterCurrent","trackPage","trackPageview","active","isActive","queryPath","includePath","activeRoutePath","setActive","newRoute","window","pathAndSearch","history","pushState","page","newPage","ga","pushActiveRoute","RouterGuard","onlyIf","guardInfo","valid","guard","redirect","redirectPath","destinationUrl","RouterRedirect","currentPath","redirectTo","RouterRoute","routeInfo","routeNamedParams","urlParser","namedPath","parsedParams","get","layout","RouterPath","basePathName","updatedPathRoute","routePathLanguage","localisedPathName","localisedRouteWithoutNamedParams","basePathNameWithoutNamedParams","basePathSameAsLocalised","updatedPath","localisedPath","routeLanguage","routePath","routePathValue","require$$2","require$$3","require$$4","RouterFinder","routes","currentUrl","routerOptions","defaultLanguage","findActiveRoute","searchActiveRoute","searchActiveRoutes","routerPath","routerRoute","setCurrentRoute","nestedRoutes","nestedRoutesAndNoPath","indexRoute","customLanguage","custom404Page","find","routeNotFound","routerCurrent","userDefinedRoutes","SpaRouter","langConvertTo","location","href","gaPageviews","setActiveRoute","navigateTo","localName","preventDefault","onpopstate","_event","routeIsActive","slot_ctx","lets","undefined","merged","len","Math","max","to","title","styles","stopPropagation","Route","Router","Navigate","factory","extend","arguments","attributes","decode","replace","decodeURIComponent","converter","api","defaults","expires","Date","toUTCString","JSON","stringify","test","e","write","encodeURIComponent","String","escape","stringifiedAttributes","attributeName","cookie","json","jar","cookies","parts","charAt","read","parse","getJSON","withConverter","module","ROLES","game","role","player","id","gameId","gameInProgress","Cookies","getElementById","click","_csrf","async","url","opts","csrf","fetch","fetchOpts","body","method","question","answer","rounds","width","addQuestion","roundIndex","deleteQuestion","questionIndex","isMobile","res","request","questions","isJoinDisabled","match","players","answers","onMarkAnswer","enabled","gameStateAnswer","onSubmit","io","socket","post","on","state","endOfRound","gameOver","started","titleText","$role","answerSubmitted","currentRoundIndex","currentQuestionIndex","$player","$game","console","log","finished","isGameStarted","isGameOver","isEndOfRound","round","currentRound","currentQuestion","playerAnswers","nextDisabled","playerId","questionId","answerId"],"mappings":"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"}