{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../frontend/App.svelte",
    "../../frontend/index.svelte",
    "../../frontend/answer-input.svelte",
    "../../frontend/player-answers.svelte",
    "../../frontend/player-list.svelte",
    "../../frontend/index.svelte",
    "../../frontend/index.svelte",
    "../../frontend/index.svelte",
    "../../frontend/index.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Router } from \"svelte-router-spa\";\n  import { routes } from \"./routes\";\n</script>\n\n<style>\n  main {\n    width: 100vw;\n    height: 100vh;\n    padding: 0 20px;\n  }\n\n  @media (min-width: 768px) {\n    main {\n      padding: 0 50px;\n    }\n  }\n</style>\n\n<main>\n  <Router {routes} />\n</main>\n",
    "<script>\n\n</script>\n\n<style>\n  .dots {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .dots div {\n    position: absolute;\n    top: 33px;\n    width: 13px;\n    height: 13px;\n    border-radius: 50%;\n    background: #41403e;\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n  }\n  .dots div:nth-child(1) {\n    left: 8px;\n    animation: dots1 0.6s infinite;\n  }\n  .dots div:nth-child(2) {\n    left: 8px;\n    animation: dots2 0.6s infinite;\n  }\n  .dots div:nth-child(3) {\n    left: 32px;\n    animation: dots2 0.6s infinite;\n  }\n  .dots div:nth-child(4) {\n    left: 56px;\n    animation: dots3 0.6s infinite;\n  }\n  @keyframes dots1 {\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n  @keyframes dots3 {\n    0% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(0);\n    }\n  }\n  @keyframes dots2 {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(24px, 0);\n    }\n  }\n</style>\n\n<div class=\"dots\">\n  <div />\n  <div />\n  <div />\n  <div />\n</div>\n",
    "<script>\n  export let enabled;\n  export let gameStateAnswer = 0;\n  export let onSubmit;\n\n  let answer;\n</script>\n\n<style>\n  .answer-input {\n    display: flex;\n  }\n\n  .row {\n    flex: 1;\n  }\n\n  .submit-button {\n    width: 100%;\n  }\n</style>\n\n<div class=\"answer-input\">\n  <div class=\"row\">\n    <div class=\"col col-fill\">\n      <div class=\"form-group\">\n        <label for={`answer-input-${gameStateAnswer}`}>Answer:</label>\n        <input\n          id={`answer-input-${gameStateAnswer}`}\n          class=\"input-block\"\n          type=\"text\"\n          bind:value={answer}\n          disabled={!enabled} />\n      </div>\n      <button\n        class=\"submit-button\"\n        class:background-success={enabled}\n        disabled={!enabled}\n        on:click={() => onSubmit(answer)}>\n        {!enabled ? 'Waiting for next question...' : 'Submit'}\n      </button>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  export let answers = [];\n  export let onMarkAnswer;\n</script>\n\n<style>\n  button {\n    margin: 0;\n    padding: 0;\n    height: 50px;\n    width: 50px;\n  }\n  .row {\n    align-items: center;\n    justify-content: space-evenly;\n\n    padding: 0;\n    margin: 0;\n  }\n</style>\n\n<div>\n  {#each answers as answer}\n    <div class=\"row\">\n      <div class=\"col col-6\">{answer.answer}</div>\n      <!-- {#if answer.result === ''} -->\n      <div class=\"col col-6 row\">\n        <button\n          class:background-success={answer.result === 'CORRECT'}\n          on:click={() => onMarkAnswer(answer.id, 'CORRECT')}>\n          ✔\n        </button>\n        <button\n          class:background-danger={answer.result === 'INCORRECT'}\n          on:click={() => onMarkAnswer(answer.id, 'INCORRECT')}>\n          ✘\n        </button>\n      </div>\n      <!-- {:else} -->\n      <!-- {/if} -->\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  export let players = [];\n</script>\n\n<style>\n  h3 {\n    margin: 0 0 20px 0;\n  }\n</style>\n\n<div>\n  <h3>Players:</h3>\n  {#each players as player}\n    <ul>\n      <li>{player.name}</li>\n    </ul>\n  {/each}\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n\n  import PlayerList from \"./components/player-list.svelte\";\n  import PlayerScores from \"./components/player-scores.svelte\";\n  import PlayerAnswers from \"./components/player-answers.svelte\";\n  import AnswerInput from \"./components/answer-input.svelte\";\n  import LoadingDots from \"../../components/loading-dots/index.svelte\";\n\n  import { game, role, ROLES, player } from \"../../stores.js\";\n  import socket from \"../../utils/socket\";\n\n  export let currentRoute;\n  export let params;\n\n  let answer = \"\";\n  let titleText =\n    $role === ROLES.HOST\n      ? \"Waiting for players to join...\"\n      : \"Waiting for game to start...\";\n  // TODO: Base this off a response from the websocket\n  let answerSubmitted = false;\n  let currentRoundIndex = 0;\n  let currentQuestionIndex = 0;\n\n  $: isGameStarted = $game && $game.state && $game.state.started;\n  $: isGameOver = $game && $game.state && $game.state.gameOver;\n  $: isEndOfRound = $game && $game.state && $game.state.endOfRound;\n  $: players = ($game && $game.players) || [];\n  $: roundIndex = $game && $game.state ? $game.state.round : undefined;\n  $: questionIndex = $game && $game.state ? $game.state.question : undefined;\n  $: currentRound =\n    ($game && $game.rounds && $game.rounds[roundIndex]) || undefined;\n  $: currentQuestion =\n    (currentRound && currentRound.questions[questionIndex]) || undefined;\n  $: playerAnswers = (currentQuestion && currentQuestion.playerAnswers) || [];\n  $: nextDisabled =\n    !players.length || (isGameStarted && playerAnswers.length < players.length);\n\n  const {\n    namedParams: { id: gameId }\n  } = currentRoute;\n\n  onMount(async () => {\n    socket.on(\"gameUpdate\", data => {\n      game.set(data.game);\n      console.log($game);\n\n      // TODO: Move into template, just use $game.state to compute title.\n      if ($game.state.started) {\n        console.log($game);\n        titleText = `Round ${roundIndex + 1}: Question ${questionIndex + 1}`;\n      }\n      if ($game.state.finished) {\n        titleText = \"Final scores:\";\n      }\n      if ($game.state.endOfRound) {\n        titleText = \"End of round!\";\n      }\n      if ($game.state.gameOver) {\n        titleText = \"Game over!\";\n      }\n\n      if (currentRoundIndex !== roundIndex) {\n        currentRoundIndex = roundIndex;\n        answerSubmitted = false;\n      }\n      if (currentQuestionIndex !== $game.state.question) {\n        currentQuestionIndex = $game.state.question;\n        answerSubmitted = false;\n      }\n    });\n    socket.get(`localhost:1337/game/${gameId}/join`);\n  });\n\n  const nextQuestion = () => socket.post(`localhost:1337/game/${gameId}/next`);\n\n  const submitAnswer = answer => {\n    answerSubmitted = true;\n    socket.post(`localhost:1337/game/${gameId}/answer`, {\n      playerId: $player.id,\n      questionId: $game.rounds[roundIndex].questions[questionIndex].id,\n      answer\n    });\n  };\n\n  const markAnswer = (answerId, result) => {\n    socket.post(`localhost:1337/game/${gameId}/answer/${answerId}/mark`, {\n      result\n    });\n  };\n</script>\n\n<style>\n  h2 {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n\n    margin: 0;\n  }\n\n  .game-page {\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  .main-section {\n    display: flex;\n    overflow: auto;\n    flex: 4;\n    flex-direction: column;\n\n    padding: 20px 0 0 0;\n  }\n\n  .question-answer-text {\n    display: flex;\n    align-items: center;\n    flex: 1;\n\n    margin: 0 20px;\n  }\n\n  .answer-input {\n    flex: 2;\n  }\n\n  .player-list {\n    flex: 2;\n  }\n  .player-answers {\n    flex: 2;\n  }\n\n  .player-scores {\n    flex: 2;\n  }\n\n  .bottom-section {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n\n    width: 100%;\n  }\n\n  .start-next-button {\n    width: 100%;\n    max-width: 500px;\n  }\n\n  @media (min-width: 768px) {\n    .main-section {\n      width: 500px;\n      margin: auto;\n    }\n  }\n</style>\n\n<div class=\"game-page\">\n  <h2 class=\"title\">{titleText}</h2>\n  <div class=\"main-section\">\n    <!-- TODO: Optional chaining support in rollup/eslint? $game?.state?.started-->\n    {#if isGameStarted}\n      {#if !isEndOfRound}\n        <h4>Question:</h4>\n        <div class=\"question-answer-text\">{currentQuestion.question}</div>\n        {#if $role === ROLES.HOST}\n          <h4>Answer:</h4>\n          <div class=\"question-answer-text\">{currentQuestion.answer}</div>\n        {/if}\n        {#if $role === ROLES.PLAYER}\n          <div class=\"answer-input\">\n            <AnswerInput\n              enabled={!answerSubmitted}\n              gameStateAnswer={$game.state.answer}\n              onSubmit={submitAnswer} />\n          </div>\n        {:else}\n          <div class=\"player-answers\">\n            <PlayerAnswers answers={playerAnswers} onMarkAnswer={markAnswer} />\n          </div>\n        {/if}\n      {:else if $game && $game.state && ($game.state.endOfRound || $game.state.gameOver) && players && players.length}\n        <div class=\"player-scores\">\n          <PlayerScores {players} />\n        </div>\n      {/if}\n    {:else}\n      <div class=\"player-list\">\n        <PlayerList {players} />\n      </div>\n      {#if $role === ROLES.PLAYER}\n        <div class=\"bottom-section\">\n          <div>Waiting for host to start game</div>\n          <LoadingDots />\n        </div>\n      {/if}\n    {/if}\n  </div>\n  {#if $role === ROLES.HOST && !($game && $game.state && $game.state.gameOver)}\n    <div class=\"bottom-section\">\n      <button\n        class=\"start-next-button\"\n        class:background-success={!nextDisabled}\n        disabled={nextDisabled}\n        on:click={nextQuestion}>\n        {$game && $game.state && $game.state.started ? 'Next Question' : 'Start Game'}\n      </button>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import { Navigate } from \"svelte-router-spa\";\n\n  export let currentRoute;\n  export let params;\n</script>\n\n<style>\n  .homepage {\n    height: 100%;\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n\n  .button-container {\n    width: 55%;\n    max-width: 500px;\n  }\n\n  button {\n    height: 100%;\n    width: 100%;\n  }\n\n  .about {\n    position: absolute;\n    bottom: 20px;\n\n    text-align: center;\n  }\n</style>\n\n<div class=\"homepage\">\n  <div class=\"button-container\">\n    <Navigate to=\"/setup\">\n      <button>Start new game</button>\n    </Navigate>\n  </div>\n\n  <div class=\"button-container\">\n    <Navigate to=\"/join\">\n      <button>Join game</button>\n    </Navigate>\n  </div>\n\n  <div class=\"about\">\n    Made by\n    <a class=\"text-secondary\" href=\"http://benslater.tech\">Ben Slater</a>\n    using\n    <a class=\"text-secondary\" href=\"https://svelte.dev/\">Svelte,</a>\n    <a class=\"text-secondary\" href=\"https://sailsjs.com/\">Sails.js,</a>\n    and\n    <a class=\"text-secondary\" href=\"https://www.getpapercss.com\">Paper CSS</a>\n  </div>\n</div>\n",
    "<script>\n  import { navigateTo } from \"svelte-router-spa\";\n  import { v4 as uuid4 } from \"uuid\";\n  import { role, player, ROLES } from \"../../stores\";\n  import request from \"../../utils/request\";\n  export let currentRoute;\n  export let params;\n\n  let gameId = \"\";\n  let name = \"\";\n\n  $: isJoinDisabled = !gameId.match(/\\w-\\w/) || name === \"\";\n\n  const goToGame = async () => {\n    role.set(ROLES.PLAYER);\n    const res = await request(\"/player/create\", {\n      method: \"POST\",\n      body: {\n        name,\n        gameId: gameId.toLowerCase()\n      }\n    });\n    const { id } = await res.json();\n    player.set({ id, name });\n    navigateTo(`/game/${gameId}`);\n  };\n\n  // TODO: Recover into disconnected game\n  // TODO: Better player identity (e.g. FB/Google)\n\n  const lowercaseInput = input => {\n    gameId = input.toLowerCase();\n  };\n</script>\n\n<style>\n  /* A LOT of duplication here. Look into svelte layout */\n  h2 {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n\n    margin: 0;\n  }\n\n  .join-page {\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  .inputs {\n    display: flex;\n    align-items: center;\n    flex: 4;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .bottom-section {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n\n    width: 100%;\n  }\n\n  button {\n    width: 100%;\n    max-width: 500px;\n  }\n</style>\n\n<div class=\"join-page\">\n  <h2>Enter game ID:</h2>\n\n  <div class=\"inputs\">\n    <div class=\"form-group\">\n      <label for=\"gameId\">Game ID:</label>\n      <input\n        bind:value={gameId}\n        on:input={lowercaseInput(gameId)}\n        type=\"text\"\n        placeholder=\"Enter game ID...\"\n        id=\"gameId\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input\n        bind:value={name}\n        type=\"text\"\n        placeholder=\"Enter name...\"\n        id=\"name\" />\n    </div>\n  </div>\n\n  <div class=\"bottom-section\">\n    <button\n      class:background-success={!isJoinDisabled}\n      disabled={isJoinDisabled}\n      on:click={goToGame}>\n      Join game\n    </button>\n  </div>\n</div>\n",
    "<script>\n  import { navigateTo } from \"svelte-router-spa\";\n  import { role, ROLES } from \"../../stores\";\n  import request from \"../../utils/request\";\n\n  export let currentRoute;\n  export let params;\n\n  let rounds = [[{}]];\n  let width = 0;\n  $: isMobile = width < 768;\n\n  const addQuestion = roundIndex => {\n    rounds[roundIndex] = [...rounds[roundIndex], {}];\n  };\n\n  const addRound = () => {\n    rounds = [...rounds, [{}]];\n  };\n\n  const createGame = async () => {\n    const res = await request(\"/game/create\", {\n      method: \"POST\",\n      body: {\n        rounds\n      }\n    });\n    const { gameId } = await res.json();\n\n    role.set(ROLES.HOST);\n    navigateTo(`/game/${gameId}`);\n  };\n</script>\n\n<style>\n  h4 {\n    white-space: pre;\n  }\n\n  hr {\n    margin-top: 40px;\n  }\n\n  .add-question-separator {\n    margin: 40px 0;\n  }\n\n  .add-question-button-container {\n    display: flex;\n    justify-content: center;\n  }\n\n  .delete-question-button {\n    width: 100%;\n  }\n\n  .delete-question-button-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .card {\n    margin-bottom: 20px;\n  }\n\n  .add-question {\n    width: 100%;\n    max-width: 500px;\n  }\n\n  .bottom-buttons {\n    display: flex;\n\n    margin-bottom: 20px;\n  }\n\n  .bottom-buttons button {\n    flex: 1;\n\n    margin: 0 20px;\n  }\n\n  @media (min-width: 768px) {\n    .delete-question-button {\n      width: 50px;\n      height: 50px;\n    }\n  }\n</style>\n\n<svelte:window bind:innerWidth={width} />\n\n<div>\n  <h2>Enter questions and answers</h2>\n  {#each rounds as questions, roundIndex}\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h3 class=\"\">Round {roundIndex + 1}</h3>\n        {#each questions as question, questionIndex}\n          {#if questionIndex > 0}\n            <hr />\n          {/if}\n          <div class=\"row\">\n            <h4 class=\"col sm-2\">Q{questionIndex + 1}:</h4>\n            <div class=\"form-group col sm-4\">\n              <label for={`question-input-${questionIndex + 1}`}>\n                Question:\n              </label>\n              <input\n                bind:value={questions[questionIndex].question}\n                class=\"input-block\"\n                type=\"text\"\n                id={`question-input-${questionIndex + 1}`} />\n            </div>\n            <div class=\"form-group col sm-4\">\n              <label for={`answer-input-${questionIndex + 1}`}>Answer:</label>\n              <input\n                bind:value={questions[questionIndex].answer}\n                class=\"input-block\"\n                type=\"text\"\n                id={`answer-input-${questionIndex + 1}`} />\n            </div>\n            <div class=\"col sm-2 delete-question-button-container\">\n              <button class=\"background-danger delete-question-button\">\n                {isMobile ? 'Delete question' : '✘'}\n              </button>\n            </div>\n          </div>\n        {/each}\n        <hr class=\"add-question-separator\" />\n        <div class=\"add-question-button-container\">\n          <button\n            class=\"add-question background-primary\"\n            on:click={() => addQuestion(roundIndex)}>\n            Add question\n          </button>\n        </div>\n      </div>\n    </div>\n  {/each}\n  <div class=\"bottom-buttons\">\n    <button class=\"background-secondary\" on:click={addRound}>Add round</button>\n    <button class=\"background-success\" on:click={createGame}>\n      Create game\n    </button>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}